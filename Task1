# *Task 1 Solution WITH IAM ROLE:*
# create a server with hostname inside the server 

#!/bin/bash
# Fetch metadata
TOKEN=$(curl -X PUT -sH "X-aws-ec2-metadata-token-ttl-seconds: 21600" "http://169.254.169.254/latest/api/token")
region=$(curl -sH "X-aws-ec2-metadata-token: $TOKEN" "http://169.254.169.254/latest/meta-data/placement/region")
instance_id=$(curl -sH "X-aws-ec2-metadata-token: $TOKEN" "http://169.254.169.254/latest/meta-data/instance-id")

# Get EC2 Name Tag
host_name=$(aws ec2 describe-tags --region $region --filters "Name=resource-id,Values=$instance_id" --query "Tags[?Key=='Name'].Value" --output text | tr -d '"')
if [[ -z "$host_name" ]]; then host_name="batch2-server"; fi
sudo hostnamectl set-hostname "$host_name"
# Update /etc/hosts to reflect new hostname
echo "127.0.0.1 $host_name" | sudo tee -a /etc/hosts > /dev/null



--------
permissions: I used for this task

ec2readonlyaccess
custom policy
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": "ec2:DescribeTags",
            "Resource": "*"
        }
    ]
}
