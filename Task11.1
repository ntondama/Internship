main.tf

provider "aws" {
  region = "ap-southeast-2"
}

# Get default VPC
data "aws_vpc" "default" {
  default = true
}

# Get all subnets in the default VPC
data "aws_subnets" "default_vpc_subnets" {
  filter {
    name   = "vpc-id"
    values = [data.aws_vpc.default.id]
  }
}

# Find subnet in AZ ap-southeast-2a (1a zone)
data "aws_subnet" "az_1a" {
  for_each = toset(data.aws_subnets.default_vpc_subnets.ids)
  id       = each.key
}

# Filter for subnet in 1a (ap-southeast-2a)
locals {
  subnet_1a_id = one([
    for s in data.aws_subnet.az_1a :
    s.id if s.availability_zone == "ap-southeast-2a"
  ])
}

# Get latest Amazon Linux 2 AMI
data "aws_ssm_parameter" "amazon_linux_2" {
  name = "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
}

# Create EC2 in subnet 1a
resource "aws_instance" "task11_server1a" {
  ami           = data.aws_ssm_parameter.amazon_linux_2.value
  instance_type = "t2.micro"
  subnet_id     = local.subnet_1a_id
  key_name      = var.key_name

  tags = {
    Name = "task11-server1a"
  }
}
################################################
vaiables.tf

variable "key_name" {
  default = "NTsydney"  # Replace with your real key pair
}

###############################################

outputs.tf

output "task11_server1a_public_ip" {
  value = aws_instance.task11_server1a.public_ip
}

